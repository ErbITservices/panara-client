{"ast":null,"code":"import React,{useState,useEffect}from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";const Container=styled.div`\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 450px;\n    max-width: 90%;\n    height: max-content;\n    background-color: white;\n    box-shadow: 0 0px 0px 1000px rgba(0,0,0,.3);\n    padding: 20px;\n    z-index: 100;\n    border-radius: 1vmax;\n    display: ${p=>p.isOpen?\"block\":\"none\"};\n`;function ModalComp(_ref){let{children,isOpen}=_ref;return/*#__PURE__*/_jsx(Container,{isOpen:isOpen,children:children});}export default ModalComp;","map":{"version":3,"names":["React","useState","useEffect","styled","jsx","_jsx","Container","div","p","isOpen","ModalComp","_ref","children"],"sources":["M:/first-react/panara/react/src/components/ModalComp.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 450px;\r\n    max-width: 90%;\r\n    height: max-content;\r\n    background-color: white;\r\n    box-shadow: 0 0px 0px 1000px rgba(0,0,0,.3);\r\n    padding: 20px;\r\n    z-index: 100;\r\n    border-radius: 1vmax;\r\n    display: ${p => p.isOpen ? \"block\": \"none\"};\r\n`\r\n\r\nfunction ModalComp({children, isOpen, }) { \r\n  return (\r\n    <Container isOpen={isOpen}>\r\n        {children}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ModalComp"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAChD,MAAO,CAAAC,MAAM,KAAM,mBAAmB,QAAAC,GAAA,IAAAC,IAAA,yBAEtC,KAAM,CAAAC,SAAS,CAAGH,MAAM,CAACI,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,CAAC,EAAIA,CAAC,CAACC,MAAM,CAAG,OAAO,CAAE,MAAM;AAC9C,CAAC,CAED,QAAS,CAAAC,SAASA,CAAAC,IAAA,CAAuB,IAAtB,CAACC,QAAQ,CAAEH,MAAQ,CAAC,CAAAE,IAAA,CACrC,mBACEN,IAAA,CAACC,SAAS,EAACG,MAAM,CAAEA,MAAO,CAAAG,QAAA,CACrBA,QAAQ,CACF,CAAC,CAEhB,CAEA,cAAe,CAAAF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}