{"ast":null,"code":"import{configureStore}from\"@reduxjs/toolkit\";import cartReducer from\"./cartRedux\";import userReducer from'./userRedux';import errorReducer from\"./errorRedux\";import{persistStore,persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from'redux-persist';import storage from'redux-persist/lib/storage';const persistConfig={key:'root',version:1,storage};const persistedReducer=persistReducer(persistConfig,userReducer);export const store=configureStore({reducer:{cart:cartReducer,error:errorReducer,user:persistedReducer},middleware:getDefaultMiddleware=>getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}})});export let persistor=persistStore(store);","map":{"version":3,"names":["configureStore","cartReducer","userReducer","errorReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","persistedReducer","store","reducer","cart","error","user","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["M:/first-react/panara/react/src/redux/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cartReducer from \"./cartRedux\"\r\nimport userReducer from './userRedux'\r\nimport errorReducer from \"./errorRedux\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from 'redux-persist'\r\n  import storage from 'redux-persist/lib/storage'\r\n\r\n  const persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n  }\r\n  \r\n  const persistedReducer = persistReducer(persistConfig, userReducer)\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n        cart: cartReducer,\r\n        error: errorReducer,\r\n        user: persistedReducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n})\r\n\r\nexport let persistor = persistStore(store)"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,MAAO,CAAAC,WAAW,KAAM,aAAa,CACrC,MAAO,CAAAC,WAAW,KAAM,aAAa,CACrC,MAAO,CAAAC,YAAY,KAAM,cAAc,CACvC,OACIC,YAAY,CACZC,cAAc,CACdC,KAAK,CACLC,SAAS,CACTC,KAAK,CACLC,OAAO,CACPC,KAAK,CACLC,QAAQ,KACH,eAAe,CACtB,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAE/C,KAAM,CAAAC,aAAa,CAAG,CACpBC,GAAG,CAAE,MAAM,CACXC,OAAO,CAAE,CAAC,CACVH,OACF,CAAC,CAED,KAAM,CAAAI,gBAAgB,CAAGX,cAAc,CAACQ,aAAa,CAAEX,WAAW,CAAC,CAErE,MAAO,MAAM,CAAAe,KAAK,CAAGjB,cAAc,CAAC,CAChCkB,OAAO,CAAC,CACJC,IAAI,CAAElB,WAAW,CACjBmB,KAAK,CAAEjB,YAAY,CACnBkB,IAAI,CAAEL,gBACV,CAAC,CACDM,UAAU,CAAGC,oBAAoB,EACjCA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAACnB,KAAK,CAAEC,SAAS,CAAEC,KAAK,CAAEC,OAAO,CAAEC,KAAK,CAAEC,QAAQ,CACpE,CACF,CAAC,CACL,CAAC,CAAC,CAEF,MAAO,IAAI,CAAAe,SAAS,CAAGtB,YAAY,CAACa,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}